plugins {
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'maven-publish'
}

group = 'com.hiveflow'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.security:spring-security-oauth2-authorization-server:0.2.0'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}

jar {
    enabled = false
}

bootJar {
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

/* Github Package Repository Credentials */
/**
 * Tenta obter as configurações do gradle.properties, se não existir, busca da variável de ambiente.
 **/
def gprUser = project.findProperty("github.user") ?: System.getenv("USERNAME")
def gprToken = project.findProperty("github.token") ?: System.getenv("TOKEN")

logger.warn('Actor: ' + gprUser)
logger.warn('Actor: ' + gprToken)

publish {
    dependsOn assemble
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/hiveflow/iam")
            credentials {
                username = gprUser
                password = gprToken
            }
        }
    }
    publications {
        bootJava(MavenPublication) {
            artifact bootJar
        }
    }
}